@page "/control_panel"
@using System.Net.Http
@using System.Net.Http.Headers
@using System.Net.Http.Json
@inject HttpClient Http
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage

<div class="text">
    <h1 class="h1-title"> Welcome to Grid the Grid</h1><br />
    @if (!sessionStorage.GetItem<bool>("logged"))
    {
        <h2 class="h1-title"> TODO: redirect on register or login </h2>
    }
    <h2 class="h1-title">@companyConfiguration</h2>
    <writeSession What="companyConfiguration" />
</div>
<br />

@if (sessionStorage.GetItem<bool>("logged"))
{
    <div class="flex-container" style="margin: 0 auto; display:flex; justify-content:center; width:50%">
        <EditForm Model="@companyModel" OnValidSubmit="@PostCompanyConfiguration">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <InputText id="Company Name" @bind-Value="companyModel.CompanyName" type="text" class="form-control" placeholder="Company Name" required />
            <br />
            <InputText id="Company Identification Number" @bind-Value="companyModel.CompanyIdentificationNumber" type="text" class="form-control" placeholder="CIN" required />
            <br />
            <InputText id="Country" @bind-Value="companyModel.Country" type="text" class="form-control" placeholder="Country" required />
            <br />
            <InputNumber id="Tax Rates" @bind-Value="companyModel.TaxRates" class="form-control" placeholder="0.01" required />
            <br />
            <button class="custom-button" type="submit">Submit</button>
        </EditForm>
    </div>
}

@code {
    string companyConfiguration;

    protected override void OnInitialized()
    {
        //TODO: if session storage is empty, GET from /control_panel/configuration
        companyConfiguration = sessionStorage.GetItem<string>("companyConfiguration");
    }

    private BlazorClient.Model.CompanyModel companyModel = new BlazorClient.Model.CompanyModel();

    private string response;

    private async Task PostCompanyConfiguration()
    {
        var request = new HttpRequestMessage()
        {
            Method = new HttpMethod("POST"),
            RequestUri = new Uri("http://localhost:49429/control_panel/configuration"),
            Content = JsonContent.Create(companyModel)
        };
        request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwNzFhNTM5YmMyYWNmZjU5M2UxM2NjMSIsIm5iZiI6MTYxODMxNDUzMSwiZXhwIjoxNjE4OTE5MzMxLCJpYXQiOjE2MTgzMTQ1MzF9.C-t9emi72yazOo5-I9NhDiA1CGAMTp7BCrzCBcFOEuA");
        var response = await Http.SendAsync(request);
        var responseStatusCode = response.StatusCode;

        var responseBody = await response.Content.ReadAsStringAsync();

        sessionStorage.SetItem<string>("companyConfiguration", responseBody);

        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }
}
